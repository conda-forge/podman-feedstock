{% set version = "5.4.2" %}

package:
  name: podman
  version: {{ version }}

source:
  url: https://github.com/containers/podman/archive/v{{ version }}.tar.gz
  sha256: 8da62c25956441b14d781099e803e38410a5753e5c7349bcd34615b9ca5ed4f2
  folder: src/github.com/containers/podman
  patches:
    # NOTE: This adds the memfd_create syscall which is not available on CentOS 6's kernels.
    - 0001-Add-missing-defines-for-CentOS-6.patch
    # NOTE: If the patch for relative paths stops working, see the buildah
    #       feedstock for an alternative with an hardcoded prefix path.
    - 0002-relative-paths-for-system-config-and-binaries.patch

build:
  number: 0
  skip: true  # [not linux]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ stdlib("c") }}
    - {{ compiler('go-cgo') }} 1.22
    # Instead specify the underlying packages since this isn't cross-platform
    - go-licenses >=0.0.44
    - go-md2man
    - pkg-config
    - make
  host:
    - btrfs-progs
    - containers-common
    - glib
    # Header+pkgconfig files for libglib are in the glib package.
    - libglib
    - gpgme
    - libassuan
    - libgpg-error
    - libseccomp
  run:
    - conmon >=2.0.30
    - containers-common
    - cni-plugins
    # TODO: switch to crun?
    - runc
    - slirp4netns
    - netavark

test:
  requires:
    # NOTE: Some binaries from util-linux, like `nsenter`, are needed. To avoid
    #       clashes with users' system-provided base utils, let's not add
    #       util-linux to requirements/run for now.
    - util-linux
  commands:
    - podman --help
    - podman --version
    # We cannot really test podman's functionality here because we'd need to
    # run it as root and/or in a build container with more capabilities.
    # Instead let's at least see if it read the config from containers-common.
    # NOTE: This does not test if registries.conf is used because the program
    #       terminates before reading the file (if built rootless in container).
    - |
      # We use mktemp instead of a path in the test work directory to avoid
      # "Error: the specified runroot is longer than 50 characters".
      tmp="$( mktemp -d )"
      trap 'cat "${tmp}/podman-info.txt" || true; rm -r "${tmp}" ; trap - EXIT ; exit' EXIT INT HUP

      podman --log-level=debug --storage-driver=vfs \
        --root="${tmp}/root" --runroot="${tmp}/runroot" \
        info > "${tmp}/podman-info.txt" 2>&1

      grep -F "seccompProfilePath: ${PREFIX}/share/containers/seccomp.json" "${tmp}/podman-info.txt"

      # Not in output:
      # grep -F "${PREFIX}/share/containers/containers.conf" "${tmp}/podman-info.txt"
      # grep -F "HooksDir:[${PREFIX}/share/containers/oci/hooks.d]" "${tmp}/podman-info.txt"
      # grep -F "SignaturePolicyPath:${PREFIX}/etc/containers/policy.json" "${tmp}/podman-info.txt"

about:
  home: https://podman.io/
  dev_url: https://github.com/containers/podman
  doc_url: https://docs.podman.io/en/latest/
  license: Apache-2.0
  license_family: Apache
  license_file:
    - src/github.com/containers/podman/LICENSE
    - license-files/
  summary: 'Podman: A tool for managing OCI containers and pods.'
  description: >
    Podman (the POD MANager) is a tool for managing containers and images, volumes mounted into those containers, and pods made from groups of containers. Podman is based on libpod, a library for container lifecycle management that is also contained in this repository. The libpod library provides APIs for managing containers,
    pods, container images, and volumes.

extra:
  recipe-maintainers:
    - mbargull
    - dhirschfeld
    - manics
    - xhochy
